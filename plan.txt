current focus, add ability to edit each property, I.E. project name, TDL title, description, notes, duedate, checklist:
* add an edit button for todolist title
* make a form pop up when the button is clicked
* the form should have field with a label telling the user "what would like to change [name of todolist title] to?"
* the submit button will close the form and will call a function that updates local storage and all the items under that todolistTitle.
----------------------------------------------------------------------------------------------------------------------------------------
* add an edit button for [description, notes, duedate]
* make a form popup when the button is clicked
* the form should have field with a label telling the user "what would like to change the [description, notes, duedate] to?"
* the submit button will close the form and will update the [description, notes, duedate] in local storage.
----------------------------------------------------------------------------------------------------------------------------------------
* add an edit button for the checklist
* make a form popup when the button is clicked
* the form should allow you to add or delete checklist items.
* the submit button will close the form and update the checklist in local storage.
----------------------------------------------------------------------------------------------------------------------------------------
* edit buttons will be made in the todolistdom.js file
* similar to the forms and fields
----------------------------------------------------------------------------------------------------------------------------------------
Psuedo Script:

const editProjectFields = (() => {
    function displayForm (field) {
          const ourForm = document.querySelector(`${field} > .form-class-name`);
        ourForm.display = "block";
    }
    function hideForm (field) {
           const ourForm = document.querySelector(`${field} > .form-class-name`);
        ourForm.display = "none";
    }
    //ourProject will be a object that holds all the project data
    function editProjectName(ourProject) {
        const newName = document.querySelector(`${ourProject.name} > form > field`).value;
        const oldName = ourProject.name;
        let Retrieved = localStorage.getItem(oldName); //retrieve items based off the old name
        let ToDoListTitles = JSON.parse(Retrieved);
        for(let i = 0; i < ToDoListTitles.length; i++)
        {
            //Set the new item equal to the old items
            localStorage.setItem(`${newName}-${ToDoListTitles[i]`, localStorage.getItem(`${oldName}-${ToDoListTitles[i]`));
            localStorage.setItem(`${newName}-${ToDoListTitles[i]-description`, localStorage.getItem(`${oldName}-${ToDoListTitles[i]-description`));
            localStorage.setItem(`${newName}-${ToDoListTitles[i]-notes`, localStorage.getItem(`${oldName}-${ToDoListTitles[i]-notes`));
            localStorage.setItem(`${newName}-${ToDoListTitles[i]-duedate`, localStorage.getItem(`${oldName}-${ToDoListTitles[i]-duedate`));
            localStorage.setItem(`${newName}-${ToDoListTitles[i]-checklist`, localStorage.getItem(`${oldName}-${ToDoListTitles[i]-checklist`));
            //Remove the old items now that they aren't needed anymore.
            localStorage.removeItem(`${oldName}-${ToDoListTitles[i]`);
            localStorage.removeItem(`${oldName}-${ToDoListTitles[i]-description`);
            localStorage.removeItem(`${oldName}-${ToDoListTitles[i]-notes`);
            localStorage.removeItem(`${oldName}-${ToDoListTitles[i]-duedate`);
            localStorage.removeItem(`${oldName}-${ToDoListTitles[i]-checklist`);
        }
    }
})();